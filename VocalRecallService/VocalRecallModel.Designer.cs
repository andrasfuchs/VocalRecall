//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_BugReport_Translation", "Translation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VocalRecallService.Translation), "BugReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.BugReport), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_BugReport_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VocalRecallService.Word), "BugReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.BugReport), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_User_Culture", "Culture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Culture), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.User), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_Word_Culture", "Culture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Culture), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.Word), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_PlayLog_PlayLog", "PlayLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VocalRecallService.PlayLog), "PlayLog1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.PlayLog), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_PlayLog_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.User), "PlayLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.PlayLog), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_PlayLog_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Word), "PlayLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.PlayLog), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_PlayLog_Word1", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Word), "PlayLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.PlayLog), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_TestResult_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.User), "TestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.TestResult), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_TestResult_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Word), "TestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.TestResult), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_Translation_OriginalWord", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.Word), "Translation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.Translation), true)]
[assembly: EdmRelationshipAttribute("VocalRecallModel", "FK_SessionLog_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VocalRecallService.User), "SessionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VocalRecallService.SessionLog), true)]

#endregion

namespace VocalRecallService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VocalRecallEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VocalRecallEntities object using the connection string found in the 'VocalRecallEntities' section of the application configuration file.
        /// </summary>
        public VocalRecallEntities() : base("name=VocalRecallEntities", "VocalRecallEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VocalRecallEntities object.
        /// </summary>
        public VocalRecallEntities(string connectionString) : base(connectionString, "VocalRecallEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VocalRecallEntities object.
        /// </summary>
        public VocalRecallEntities(EntityConnection connection) : base(connection, "VocalRecallEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BugReport> BugReports
        {
            get
            {
                if ((_BugReports == null))
                {
                    _BugReports = base.CreateObjectSet<BugReport>("BugReports");
                }
                return _BugReports;
            }
        }
        private ObjectSet<BugReport> _BugReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Culture> Cultures
        {
            get
            {
                if ((_Cultures == null))
                {
                    _Cultures = base.CreateObjectSet<Culture>("Cultures");
                }
                return _Cultures;
            }
        }
        private ObjectSet<Culture> _Cultures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayLog> PlayLogs
        {
            get
            {
                if ((_PlayLogs == null))
                {
                    _PlayLogs = base.CreateObjectSet<PlayLog>("PlayLogs");
                }
                return _PlayLogs;
            }
        }
        private ObjectSet<PlayLog> _PlayLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestResult> TestResults
        {
            get
            {
                if ((_TestResults == null))
                {
                    _TestResults = base.CreateObjectSet<TestResult>("TestResults");
                }
                return _TestResults;
            }
        }
        private ObjectSet<TestResult> _TestResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Translation> Translations
        {
            get
            {
                if ((_Translations == null))
                {
                    _Translations = base.CreateObjectSet<Translation>("Translations");
                }
                return _Translations;
            }
        }
        private ObjectSet<Translation> _Translations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Word> Words
        {
            get
            {
                if ((_Words == null))
                {
                    _Words = base.CreateObjectSet<Word>("Words");
                }
                return _Words;
            }
        }
        private ObjectSet<Word> _Words;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionLog> SessionLogs
        {
            get
            {
                if ((_SessionLogs == null))
                {
                    _SessionLogs = base.CreateObjectSet<SessionLog>("SessionLogs");
                }
                return _SessionLogs;
            }
        }
        private ObjectSet<SessionLog> _SessionLogs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BugReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBugReports(BugReport bugReport)
        {
            base.AddObject("BugReports", bugReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cultures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCultures(Culture culture)
        {
            base.AddObject("Cultures", culture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayLogs(PlayLog playLog)
        {
            base.AddObject("PlayLogs", playLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestResults(TestResult testResult)
        {
            base.AddObject("TestResults", testResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Translations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTranslations(Translation translation)
        {
            base.AddObject("Translations", translation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Words EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWords(Word word)
        {
            base.AddObject("Words", word);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionLogs(SessionLog sessionLog)
        {
            base.AddObject("SessionLogs", sessionLog);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cultureId">No Metadata Documentation available.</param>
        /// <param name="topCount">No Metadata Documentation available.</param>
        public ObjectResult<sp_GetTopWords_Result> sp_GetTopWords(Nullable<global::System.Int32> cultureId, Nullable<global::System.Int32> topCount)
        {
            ObjectParameter cultureIdParameter;
            if (cultureId.HasValue)
            {
                cultureIdParameter = new ObjectParameter("cultureId", cultureId);
            }
            else
            {
                cultureIdParameter = new ObjectParameter("cultureId", typeof(global::System.Int32));
            }
    
            ObjectParameter topCountParameter;
            if (topCount.HasValue)
            {
                topCountParameter = new ObjectParameter("topCount", topCount);
            }
            else
            {
                topCountParameter = new ObjectParameter("topCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_GetTopWords_Result>("sp_GetTopWords", cultureIdParameter, topCountParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cultureId">No Metadata Documentation available.</param>
        public int sp_ResetFrequencies(Nullable<global::System.Int32> cultureId)
        {
            ObjectParameter cultureIdParameter;
            if (cultureId.HasValue)
            {
                cultureIdParameter = new ObjectParameter("cultureId", cultureId);
            }
            else
            {
                cultureIdParameter = new ObjectParameter("cultureId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_ResetFrequencies", cultureIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cultureId">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        public ObjectResult<sp_GetWord_Result> sp_GetWord(Nullable<global::System.Int32> cultureId, global::System.String text)
        {
            ObjectParameter cultureIdParameter;
            if (cultureId.HasValue)
            {
                cultureIdParameter = new ObjectParameter("cultureId", cultureId);
            }
            else
            {
                cultureIdParameter = new ObjectParameter("cultureId", typeof(global::System.Int32));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sp_GetWord_Result>("sp_GetWord", cultureIdParameter, textParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cultureId">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        /// <param name="frequency">No Metadata Documentation available.</param>
        /// <param name="frequencyLastUpdated">No Metadata Documentation available.</param>
        public int sp_InsertWord(Nullable<global::System.Int32> cultureId, global::System.String text, Nullable<global::System.Int32> frequency, Nullable<global::System.DateTime> frequencyLastUpdated)
        {
            ObjectParameter cultureIdParameter;
            if (cultureId.HasValue)
            {
                cultureIdParameter = new ObjectParameter("cultureId", cultureId);
            }
            else
            {
                cultureIdParameter = new ObjectParameter("cultureId", typeof(global::System.Int32));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            ObjectParameter frequencyParameter;
            if (frequency.HasValue)
            {
                frequencyParameter = new ObjectParameter("frequency", frequency);
            }
            else
            {
                frequencyParameter = new ObjectParameter("frequency", typeof(global::System.Int32));
            }
    
            ObjectParameter frequencyLastUpdatedParameter;
            if (frequencyLastUpdated.HasValue)
            {
                frequencyLastUpdatedParameter = new ObjectParameter("frequencyLastUpdated", frequencyLastUpdated);
            }
            else
            {
                frequencyLastUpdatedParameter = new ObjectParameter("frequencyLastUpdated", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("sp_InsertWord", cultureIdParameter, textParameter, frequencyParameter, frequencyLastUpdatedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="wordId">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        /// <param name="frequency">No Metadata Documentation available.</param>
        /// <param name="frequencyLastUpdated">No Metadata Documentation available.</param>
        public int sp_UpdateWord(Nullable<global::System.Int32> wordId, global::System.String text, Nullable<global::System.Int32> frequency, Nullable<global::System.DateTime> frequencyLastUpdated)
        {
            ObjectParameter wordIdParameter;
            if (wordId.HasValue)
            {
                wordIdParameter = new ObjectParameter("wordId", wordId);
            }
            else
            {
                wordIdParameter = new ObjectParameter("wordId", typeof(global::System.Int32));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            ObjectParameter frequencyParameter;
            if (frequency.HasValue)
            {
                frequencyParameter = new ObjectParameter("frequency", frequency);
            }
            else
            {
                frequencyParameter = new ObjectParameter("frequency", typeof(global::System.Int32));
            }
    
            ObjectParameter frequencyLastUpdatedParameter;
            if (frequencyLastUpdated.HasValue)
            {
                frequencyLastUpdatedParameter = new ObjectParameter("frequencyLastUpdated", frequencyLastUpdated);
            }
            else
            {
                frequencyLastUpdatedParameter = new ObjectParameter("frequencyLastUpdated", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("sp_UpdateWord", wordIdParameter, textParameter, frequencyParameter, frequencyLastUpdatedParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="BugReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BugReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BugReport object.
        /// </summary>
        /// <param name="bugReportId">Initial value of the BugReportId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="votes">Initial value of the Votes property.</param>
        public static BugReport CreateBugReport(global::System.Int32 bugReportId, global::System.String description, global::System.Int32 votes)
        {
            BugReport bugReport = new BugReport();
            bugReport.BugReportId = bugReportId;
            bugReport.Description = description;
            bugReport.Votes = votes;
            return bugReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BugReportId
        {
            get
            {
                return _BugReportId;
            }
            set
            {
                if (_BugReportId != value)
                {
                    OnBugReportIdChanging(value);
                    ReportPropertyChanging("BugReportId");
                    _BugReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BugReportId");
                    OnBugReportIdChanged();
                }
            }
        }
        private global::System.Int32 _BugReportId;
        partial void OnBugReportIdChanging(global::System.Int32 value);
        partial void OnBugReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Votes
        {
            get
            {
                return _Votes;
            }
            set
            {
                OnVotesChanging(value);
                ReportPropertyChanging("Votes");
                _Votes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Votes");
                OnVotesChanged();
            }
        }
        private global::System.Int32 _Votes;
        partial void OnVotesChanging(global::System.Int32 value);
        partial void OnVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedWordId
        {
            get
            {
                return _RelatedWordId;
            }
            set
            {
                OnRelatedWordIdChanging(value);
                ReportPropertyChanging("RelatedWordId");
                _RelatedWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedWordId");
                OnRelatedWordIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedWordId;
        partial void OnRelatedWordIdChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedTransactionId
        {
            get
            {
                return _RelatedTransactionId;
            }
            set
            {
                OnRelatedTransactionIdChanging(value);
                ReportPropertyChanging("RelatedTransactionId");
                _RelatedTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedTransactionId");
                OnRelatedTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedTransactionId;
        partial void OnRelatedTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedTransactionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_BugReport_Translation", "Translation")]
        public Translation Translation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Translation>("VocalRecallModel.FK_BugReport_Translation", "Translation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Translation>("VocalRecallModel.FK_BugReport_Translation", "Translation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Translation> TranslationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Translation>("VocalRecallModel.FK_BugReport_Translation", "Translation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Translation>("VocalRecallModel.FK_BugReport_Translation", "Translation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_BugReport_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_BugReport_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_BugReport_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_BugReport_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("VocalRecallModel.FK_BugReport_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="Culture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Culture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Culture object.
        /// </summary>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cultureISO">Initial value of the CultureISO property.</param>
        /// <param name="totalWordsProcessed">Initial value of the TotalWordsProcessed property.</param>
        /// <param name="totalWordCount">Initial value of the TotalWordCount property.</param>
        /// <param name="totalBooksRead">Initial value of the TotalBooksRead property.</param>
        public static Culture CreateCulture(global::System.Int32 cultureId, global::System.String name, global::System.String cultureISO, global::System.Int32 totalWordsProcessed, global::System.Int32 totalWordCount, global::System.Int32 totalBooksRead)
        {
            Culture culture = new Culture();
            culture.CultureId = cultureId;
            culture.Name = name;
            culture.CultureISO = cultureISO;
            culture.TotalWordsProcessed = totalWordsProcessed;
            culture.TotalWordCount = totalWordCount;
            culture.TotalBooksRead = totalBooksRead;
            return culture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                if (_CultureId != value)
                {
                    OnCultureIdChanging(value);
                    ReportPropertyChanging("CultureId");
                    _CultureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CultureId");
                    OnCultureIdChanged();
                }
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureISO
        {
            get
            {
                return _CultureISO;
            }
            set
            {
                OnCultureISOChanging(value);
                ReportPropertyChanging("CultureISO");
                _CultureISO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CultureISO");
                OnCultureISOChanged();
            }
        }
        private global::System.String _CultureISO;
        partial void OnCultureISOChanging(global::System.String value);
        partial void OnCultureISOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalWordsProcessed
        {
            get
            {
                return _TotalWordsProcessed;
            }
            set
            {
                OnTotalWordsProcessedChanging(value);
                ReportPropertyChanging("TotalWordsProcessed");
                _TotalWordsProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalWordsProcessed");
                OnTotalWordsProcessedChanged();
            }
        }
        private global::System.Int32 _TotalWordsProcessed;
        partial void OnTotalWordsProcessedChanging(global::System.Int32 value);
        partial void OnTotalWordsProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalWordCount
        {
            get
            {
                return _TotalWordCount;
            }
            set
            {
                OnTotalWordCountChanging(value);
                ReportPropertyChanging("TotalWordCount");
                _TotalWordCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalWordCount");
                OnTotalWordCountChanged();
            }
        }
        private global::System.Int32 _TotalWordCount;
        partial void OnTotalWordCountChanging(global::System.Int32 value);
        partial void OnTotalWordCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalBooksRead
        {
            get
            {
                return _TotalBooksRead;
            }
            set
            {
                OnTotalBooksReadChanging(value);
                ReportPropertyChanging("TotalBooksRead");
                _TotalBooksRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalBooksRead");
                OnTotalBooksReadChanged();
            }
        }
        private global::System.Int32 _TotalBooksRead;
        partial void OnTotalBooksReadChanging(global::System.Int32 value);
        partial void OnTotalBooksReadChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_User_Culture", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("VocalRecallModel.FK_User_Culture", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("VocalRecallModel.FK_User_Culture", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_Word_Culture", "Word")]
        public EntityCollection<Word> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("VocalRecallModel.FK_Word_Culture", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("VocalRecallModel.FK_Word_Culture", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="PlayLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayLog object.
        /// </summary>
        /// <param name="playLogId">Initial value of the PlayLogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="firstWordId">Initial value of the FirstWordId property.</param>
        /// <param name="secondWordId">Initial value of the SecondWordId property.</param>
        /// <param name="repetition">Initial value of the Repetition property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static PlayLog CreatePlayLog(global::System.Int32 playLogId, global::System.Int32 userId, global::System.Int32 firstWordId, global::System.Int32 secondWordId, global::System.Int32 repetition, global::System.DateTime time)
        {
            PlayLog playLog = new PlayLog();
            playLog.PlayLogId = playLogId;
            playLog.UserId = userId;
            playLog.FirstWordId = firstWordId;
            playLog.SecondWordId = secondWordId;
            playLog.Repetition = repetition;
            playLog.Time = time;
            return playLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayLogId
        {
            get
            {
                return _PlayLogId;
            }
            set
            {
                if (_PlayLogId != value)
                {
                    OnPlayLogIdChanging(value);
                    ReportPropertyChanging("PlayLogId");
                    _PlayLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayLogId");
                    OnPlayLogIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayLogId;
        partial void OnPlayLogIdChanging(global::System.Int32 value);
        partial void OnPlayLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstWordId
        {
            get
            {
                return _FirstWordId;
            }
            set
            {
                OnFirstWordIdChanging(value);
                ReportPropertyChanging("FirstWordId");
                _FirstWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstWordId");
                OnFirstWordIdChanged();
            }
        }
        private global::System.Int32 _FirstWordId;
        partial void OnFirstWordIdChanging(global::System.Int32 value);
        partial void OnFirstWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondWordId
        {
            get
            {
                return _SecondWordId;
            }
            set
            {
                OnSecondWordIdChanging(value);
                ReportPropertyChanging("SecondWordId");
                _SecondWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondWordId");
                OnSecondWordIdChanged();
            }
        }
        private global::System.Int32 _SecondWordId;
        partial void OnSecondWordIdChanging(global::System.Int32 value);
        partial void OnSecondWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Repetition
        {
            get
            {
                return _Repetition;
            }
            set
            {
                OnRepetitionChanging(value);
                ReportPropertyChanging("Repetition");
                _Repetition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Repetition");
                OnRepetitionChanged();
            }
        }
        private global::System.Int32 _Repetition;
        partial void OnRepetitionChanging(global::System.Int32 value);
        partial void OnRepetitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NextPlayLogId
        {
            get
            {
                return _NextPlayLogId;
            }
            set
            {
                OnNextPlayLogIdChanging(value);
                ReportPropertyChanging("NextPlayLogId");
                _NextPlayLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextPlayLogId");
                OnNextPlayLogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NextPlayLogId;
        partial void OnNextPlayLogIdChanging(Nullable<global::System.Int32> value);
        partial void OnNextPlayLogIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_PlayLog", "PlayLog1")]
        public EntityCollection<PlayLog> PreviousPlayLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_PlayLog", "PlayLog")]
        public PlayLog NextPlayLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlayLog> NextPlayLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlayLog>("VocalRecallModel.FK_PlayLog_PlayLog", "PlayLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_PlayLog_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_PlayLog_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_PlayLog_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VocalRecallModel.FK_PlayLog_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_Word1", "Word")]
        public Word SecondWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word1", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word1", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> SecondWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word1", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word1", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_Word", "Word")]
        public Word FirstWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> FirstWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("VocalRecallModel.FK_PlayLog_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="SessionLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionLog object.
        /// </summary>
        /// <param name="sessionLogId">Initial value of the SessionLogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="sessionSettings">Initial value of the SessionSettings property.</param>
        /// <param name="sessionStarted">Initial value of the SessionStarted property.</param>
        public static SessionLog CreateSessionLog(global::System.Int32 sessionLogId, global::System.Int32 userId, global::System.String sessionSettings, global::System.DateTime sessionStarted)
        {
            SessionLog sessionLog = new SessionLog();
            sessionLog.SessionLogId = sessionLogId;
            sessionLog.UserId = userId;
            sessionLog.SessionSettings = sessionSettings;
            sessionLog.SessionStarted = sessionStarted;
            return sessionLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionLogId
        {
            get
            {
                return _SessionLogId;
            }
            set
            {
                if (_SessionLogId != value)
                {
                    OnSessionLogIdChanging(value);
                    ReportPropertyChanging("SessionLogId");
                    _SessionLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionLogId");
                    OnSessionLogIdChanged();
                }
            }
        }
        private global::System.Int32 _SessionLogId;
        partial void OnSessionLogIdChanging(global::System.Int32 value);
        partial void OnSessionLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionSettings
        {
            get
            {
                return _SessionSettings;
            }
            set
            {
                OnSessionSettingsChanging(value);
                ReportPropertyChanging("SessionSettings");
                _SessionSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessionSettings");
                OnSessionSettingsChanged();
            }
        }
        private global::System.String _SessionSettings;
        partial void OnSessionSettingsChanging(global::System.String value);
        partial void OnSessionSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SessionStarted
        {
            get
            {
                return _SessionStarted;
            }
            set
            {
                OnSessionStartedChanging(value);
                ReportPropertyChanging("SessionStarted");
                _SessionStarted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionStarted");
                OnSessionStartedChanged();
            }
        }
        private global::System.DateTime _SessionStarted;
        partial void OnSessionStartedChanging(global::System.DateTime value);
        partial void OnSessionStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SessionEnded
        {
            get
            {
                return _SessionEnded;
            }
            set
            {
                OnSessionEndedChanging(value);
                ReportPropertyChanging("SessionEnded");
                _SessionEnded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionEnded");
                OnSessionEndedChanged();
            }
        }
        private Nullable<global::System.DateTime> _SessionEnded;
        partial void OnSessionEndedChanging(Nullable<global::System.DateTime> value);
        partial void OnSessionEndedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Double> _Result;
        partial void OnResultChanging(Nullable<global::System.Double> value);
        partial void OnResultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_SessionLog_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_SessionLog_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_SessionLog_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_SessionLog_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VocalRecallModel.FK_SessionLog_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="TestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestResult object.
        /// </summary>
        /// <param name="testResultId">Initial value of the TestResultId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="originalWordId">Initial value of the OriginalWordId property.</param>
        /// <param name="wasCorrect">Initial value of the WasCorrect property.</param>
        /// <param name="tested">Initial value of the Tested property.</param>
        public static TestResult CreateTestResult(global::System.Int32 testResultId, global::System.Int32 userId, global::System.Int32 originalWordId, global::System.Boolean wasCorrect, global::System.DateTime tested)
        {
            TestResult testResult = new TestResult();
            testResult.TestResultId = testResultId;
            testResult.UserId = userId;
            testResult.OriginalWordId = originalWordId;
            testResult.WasCorrect = wasCorrect;
            testResult.Tested = tested;
            return testResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestResultId
        {
            get
            {
                return _TestResultId;
            }
            set
            {
                if (_TestResultId != value)
                {
                    OnTestResultIdChanging(value);
                    ReportPropertyChanging("TestResultId");
                    _TestResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestResultId");
                    OnTestResultIdChanged();
                }
            }
        }
        private global::System.Int32 _TestResultId;
        partial void OnTestResultIdChanging(global::System.Int32 value);
        partial void OnTestResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginalWordId
        {
            get
            {
                return _OriginalWordId;
            }
            set
            {
                OnOriginalWordIdChanging(value);
                ReportPropertyChanging("OriginalWordId");
                _OriginalWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalWordId");
                OnOriginalWordIdChanged();
            }
        }
        private global::System.Int32 _OriginalWordId;
        partial void OnOriginalWordIdChanging(global::System.Int32 value);
        partial void OnOriginalWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WasCorrect
        {
            get
            {
                return _WasCorrect;
            }
            set
            {
                OnWasCorrectChanging(value);
                ReportPropertyChanging("WasCorrect");
                _WasCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasCorrect");
                OnWasCorrectChanged();
            }
        }
        private global::System.Boolean _WasCorrect;
        partial void OnWasCorrectChanging(global::System.Boolean value);
        partial void OnWasCorrectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Tested
        {
            get
            {
                return _Tested;
            }
            set
            {
                OnTestedChanging(value);
                ReportPropertyChanging("Tested");
                _Tested = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tested");
                OnTestedChanged();
            }
        }
        private global::System.DateTime _Tested;
        partial void OnTestedChanging(global::System.DateTime value);
        partial void OnTestedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_TestResult_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_TestResult_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_TestResult_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VocalRecallModel.FK_TestResult_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VocalRecallModel.FK_TestResult_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_TestResult_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_TestResult_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_TestResult_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_TestResult_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("VocalRecallModel.FK_TestResult_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="Translation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Translation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Translation object.
        /// </summary>
        /// <param name="translationId">Initial value of the TranslationId property.</param>
        /// <param name="originalWordId">Initial value of the OriginalWordId property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        /// <param name="common">Initial value of the Common property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Translation CreateTranslation(global::System.Int32 translationId, global::System.Int32 originalWordId, global::System.Int32 cultureId, global::System.String common, global::System.DateTime lastUpdated)
        {
            Translation translation = new Translation();
            translation.TranslationId = translationId;
            translation.OriginalWordId = originalWordId;
            translation.CultureId = cultureId;
            translation.Common = common;
            translation.LastUpdated = lastUpdated;
            return translation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TranslationId
        {
            get
            {
                return _TranslationId;
            }
            set
            {
                if (_TranslationId != value)
                {
                    OnTranslationIdChanging(value);
                    ReportPropertyChanging("TranslationId");
                    _TranslationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TranslationId");
                    OnTranslationIdChanged();
                }
            }
        }
        private global::System.Int32 _TranslationId;
        partial void OnTranslationIdChanging(global::System.Int32 value);
        partial void OnTranslationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginalWordId
        {
            get
            {
                return _OriginalWordId;
            }
            set
            {
                OnOriginalWordIdChanging(value);
                ReportPropertyChanging("OriginalWordId");
                _OriginalWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalWordId");
                OnOriginalWordIdChanged();
            }
        }
        private global::System.Int32 _OriginalWordId;
        partial void OnOriginalWordIdChanging(global::System.Int32 value);
        partial void OnOriginalWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawResponse
        {
            get
            {
                return _RawResponse;
            }
            set
            {
                OnRawResponseChanging(value);
                ReportPropertyChanging("RawResponse");
                _RawResponse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawResponse");
                OnRawResponseChanged();
            }
        }
        private global::System.String _RawResponse;
        partial void OnRawResponseChanging(global::System.String value);
        partial void OnRawResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RootWord
        {
            get
            {
                return _RootWord;
            }
            set
            {
                OnRootWordChanging(value);
                ReportPropertyChanging("RootWord");
                _RootWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootWord");
                OnRootWordChanged();
            }
        }
        private global::System.String _RootWord;
        partial void OnRootWordChanging(global::System.String value);
        partial void OnRootWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartsOfSpeech
        {
            get
            {
                return _PartsOfSpeech;
            }
            set
            {
                OnPartsOfSpeechChanging(value);
                ReportPropertyChanging("PartsOfSpeech");
                _PartsOfSpeech = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartsOfSpeech");
                OnPartsOfSpeechChanged();
            }
        }
        private global::System.String _PartsOfSpeech;
        partial void OnPartsOfSpeechChanging(global::System.String value);
        partial void OnPartsOfSpeechChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Common
        {
            get
            {
                return _Common;
            }
            set
            {
                OnCommonChanging(value);
                ReportPropertyChanging("Common");
                _Common = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Common");
                OnCommonChanged();
            }
        }
        private global::System.String _Common;
        partial void OnCommonChanging(global::System.String value);
        partial void OnCommonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Uncommon
        {
            get
            {
                return _Uncommon;
            }
            set
            {
                OnUncommonChanging(value);
                ReportPropertyChanging("Uncommon");
                _Uncommon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Uncommon");
                OnUncommonChanged();
            }
        }
        private global::System.String _Uncommon;
        partial void OnUncommonChanging(global::System.String value);
        partial void OnUncommonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rare
        {
            get
            {
                return _Rare;
            }
            set
            {
                OnRareChanging(value);
                ReportPropertyChanging("Rare");
                _Rare = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rare");
                OnRareChanged();
            }
        }
        private global::System.String _Rare;
        partial void OnRareChanging(global::System.String value);
        partial void OnRareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_BugReport_Translation", "BugReport")]
        public EntityCollection<BugReport> BugReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BugReport>("VocalRecallModel.FK_BugReport_Translation", "BugReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BugReport>("VocalRecallModel.FK_BugReport_Translation", "BugReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_Translation_OriginalWord", "Word")]
        public Word OriginalWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_Translation_OriginalWord", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_Translation_OriginalWord", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> OriginalWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("VocalRecallModel.FK_Translation_OriginalWord", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("VocalRecallModel.FK_Translation_OriginalWord", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="registered">Initial value of the Registered property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String passwordHash, global::System.DateTime registered, global::System.DateTime lastLogin, global::System.Int32 cultureId)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.PasswordHash = passwordHash;
            user.Registered = registered;
            user.LastLogin = lastLogin;
            user.CultureId = cultureId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Registered
        {
            get
            {
                return _Registered;
            }
            set
            {
                OnRegisteredChanging(value);
                ReportPropertyChanging("Registered");
                _Registered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Registered");
                OnRegisteredChanged();
            }
        }
        private global::System.DateTime _Registered;
        partial void OnRegisteredChanging(global::System.DateTime value);
        partial void OnRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_User_Culture", "Culture")]
        public Culture Culture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_User_Culture", "Culture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_User_Culture", "Culture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Culture> CultureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_User_Culture", "Culture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Culture>("VocalRecallModel.FK_User_Culture", "Culture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_User", "PlayLog")]
        public EntityCollection<PlayLog> PlayLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_User", "PlayLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_User", "PlayLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_TestResult_User", "TestResult")]
        public EntityCollection<TestResult> TestResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestResult>("VocalRecallModel.FK_TestResult_User", "TestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestResult>("VocalRecallModel.FK_TestResult_User", "TestResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_SessionLog_User", "SessionLog")]
        public EntityCollection<SessionLog> SessionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionLog>("VocalRecallModel.FK_SessionLog_User", "SessionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionLog>("VocalRecallModel.FK_SessionLog_User", "SessionLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VocalRecallModel", Name="Word")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Word : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Word object.
        /// </summary>
        /// <param name="wordId">Initial value of the WordId property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="frequencyLastUpdated">Initial value of the FrequencyLastUpdated property.</param>
        public static Word CreateWord(global::System.Int32 wordId, global::System.Int32 cultureId, global::System.String text, global::System.DateTime frequencyLastUpdated)
        {
            Word word = new Word();
            word.WordId = wordId;
            word.CultureId = cultureId;
            word.Text = text;
            word.FrequencyLastUpdated = frequencyLastUpdated;
            return word;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordId
        {
            get
            {
                return _WordId;
            }
            set
            {
                if (_WordId != value)
                {
                    OnWordIdChanging(value);
                    ReportPropertyChanging("WordId");
                    _WordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WordId");
                    OnWordIdChanged();
                }
            }
        }
        private global::System.Int32 _WordId;
        partial void OnWordIdChanging(global::System.Int32 value);
        partial void OnWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Frequency;
        partial void OnFrequencyChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Pronunciation
        {
            get
            {
                return StructuralObject.GetValidValue(_Pronunciation);
            }
            set
            {
                OnPronunciationChanging(value);
                ReportPropertyChanging("Pronunciation");
                _Pronunciation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pronunciation");
                OnPronunciationChanged();
            }
        }
        private global::System.Byte[] _Pronunciation;
        partial void OnPronunciationChanging(global::System.Byte[] value);
        partial void OnPronunciationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternativePictureUrls
        {
            get
            {
                return _AlternativePictureUrls;
            }
            set
            {
                OnAlternativePictureUrlsChanging(value);
                ReportPropertyChanging("AlternativePictureUrls");
                _AlternativePictureUrls = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlternativePictureUrls");
                OnAlternativePictureUrlsChanged();
            }
        }
        private global::System.String _AlternativePictureUrls;
        partial void OnAlternativePictureUrlsChanging(global::System.String value);
        partial void OnAlternativePictureUrlsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SelectedPictureUrl
        {
            get
            {
                return _SelectedPictureUrl;
            }
            set
            {
                OnSelectedPictureUrlChanging(value);
                ReportPropertyChanging("SelectedPictureUrl");
                _SelectedPictureUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SelectedPictureUrl");
                OnSelectedPictureUrlChanged();
            }
        }
        private global::System.String _SelectedPictureUrl;
        partial void OnSelectedPictureUrlChanging(global::System.String value);
        partial void OnSelectedPictureUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FrequencyLastUpdated
        {
            get
            {
                return _FrequencyLastUpdated;
            }
            set
            {
                OnFrequencyLastUpdatedChanging(value);
                ReportPropertyChanging("FrequencyLastUpdated");
                _FrequencyLastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrequencyLastUpdated");
                OnFrequencyLastUpdatedChanged();
            }
        }
        private global::System.DateTime _FrequencyLastUpdated;
        partial void OnFrequencyLastUpdatedChanging(global::System.DateTime value);
        partial void OnFrequencyLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_BugReport_Word", "BugReport")]
        public EntityCollection<BugReport> BugReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BugReport>("VocalRecallModel.FK_BugReport_Word", "BugReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BugReport>("VocalRecallModel.FK_BugReport_Word", "BugReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_Word_Culture", "Culture")]
        public Culture Culture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_Word_Culture", "Culture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_Word_Culture", "Culture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Culture> CultureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("VocalRecallModel.FK_Word_Culture", "Culture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Culture>("VocalRecallModel.FK_Word_Culture", "Culture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_Word", "PlayLog")]
        public EntityCollection<PlayLog> PlayLogsAsFirst
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_Word", "PlayLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_Word", "PlayLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_PlayLog_Word1", "PlayLog")]
        public EntityCollection<PlayLog> PlayLogsAsSecond
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_Word1", "PlayLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayLog>("VocalRecallModel.FK_PlayLog_Word1", "PlayLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_TestResult_Word", "TestResult")]
        public EntityCollection<TestResult> TestResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestResult>("VocalRecallModel.FK_TestResult_Word", "TestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestResult>("VocalRecallModel.FK_TestResult_Word", "TestResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VocalRecallModel", "FK_Translation_OriginalWord", "Translation")]
        public EntityCollection<Translation> Translations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Translation>("VocalRecallModel.FK_Translation_OriginalWord", "Translation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Translation>("VocalRecallModel.FK_Translation_OriginalWord", "Translation", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="VocalRecallModel", Name="sp_GetTopWords_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_GetTopWords_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_GetTopWords_Result object.
        /// </summary>
        /// <param name="wordId">Initial value of the WordId property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="frequencyLastUpdated">Initial value of the FrequencyLastUpdated property.</param>
        public static sp_GetTopWords_Result Createsp_GetTopWords_Result(global::System.Int32 wordId, global::System.Int32 cultureId, global::System.String text, global::System.DateTime frequencyLastUpdated)
        {
            sp_GetTopWords_Result sp_GetTopWords_Result = new sp_GetTopWords_Result();
            sp_GetTopWords_Result.WordId = wordId;
            sp_GetTopWords_Result.CultureId = cultureId;
            sp_GetTopWords_Result.Text = text;
            sp_GetTopWords_Result.FrequencyLastUpdated = frequencyLastUpdated;
            return sp_GetTopWords_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private Nullable<global::System.Int64> _Index;
        partial void OnIndexChanging(Nullable<global::System.Int64> value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordId
        {
            get
            {
                return _WordId;
            }
            set
            {
                OnWordIdChanging(value);
                ReportPropertyChanging("WordId");
                _WordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordId");
                OnWordIdChanged();
            }
        }
        private global::System.Int32 _WordId;
        partial void OnWordIdChanging(global::System.Int32 value);
        partial void OnWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Frequency;
        partial void OnFrequencyChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FrequencyLastUpdated
        {
            get
            {
                return _FrequencyLastUpdated;
            }
            set
            {
                OnFrequencyLastUpdatedChanging(value);
                ReportPropertyChanging("FrequencyLastUpdated");
                _FrequencyLastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrequencyLastUpdated");
                OnFrequencyLastUpdatedChanged();
            }
        }
        private global::System.DateTime _FrequencyLastUpdated;
        partial void OnFrequencyLastUpdatedChanging(global::System.DateTime value);
        partial void OnFrequencyLastUpdatedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="VocalRecallModel", Name="sp_GetWord_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_GetWord_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_GetWord_Result object.
        /// </summary>
        /// <param name="wordId">Initial value of the WordId property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static sp_GetWord_Result Createsp_GetWord_Result(global::System.Int32 wordId, global::System.Int32 cultureId, global::System.String text)
        {
            sp_GetWord_Result sp_GetWord_Result = new sp_GetWord_Result();
            sp_GetWord_Result.WordId = wordId;
            sp_GetWord_Result.CultureId = cultureId;
            sp_GetWord_Result.Text = text;
            return sp_GetWord_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordId
        {
            get
            {
                return _WordId;
            }
            set
            {
                OnWordIdChanging(value);
                ReportPropertyChanging("WordId");
                _WordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordId");
                OnWordIdChanged();
            }
        }
        private global::System.Int32 _WordId;
        partial void OnWordIdChanging(global::System.Int32 value);
        partial void OnWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Frequency;
        partial void OnFrequencyChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyChanged();

        #endregion

    }

    #endregion

    
}
